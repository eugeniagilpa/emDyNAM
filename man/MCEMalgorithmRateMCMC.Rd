% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_ABMCEM.R
\name{MCEMalgorithmRateMCMC}
\alias{MCEMalgorithmRateMCMC}
\title{Ascent-Based Markov-Chain Expectation-Maximization algorithm with MCMC and rate}
\usage{
MCEMalgorithmRateMCMC(
  nmax,
  net0,
  net1,
  theta0,
  beta0,
  fixedparameters = data.frame(Crea = c(NA, NA, NA, NA, -20, -20), Del = c(NA, NA, NA,
    NA, 20, 20)),
  formula,
  initTime = 0,
  endTime = 1,
  num_cores = 1,
  errType2 = 0.8,
  alpha = 0.9,
  gamma = 0.9,
  thr = 0.001,
  maxIter = 1000,
  thin = 10,
  pShort = 0.35,
  pAug = 0.35,
  pPerm = 0.3,
  k_perm = 5,
  burnInIter1 = 10000,
  burnInIter2 = 1000,
  out_file_names = c("out_PT_acceptDF", "out_PT_mcmcDiagDF"),
  changePPerm = FALSE
)
}
\arguments{
\item{nmax}{initial value of number of permuations for step 0}

\item{net0}{initial network}

\item{net1}{final network}

\item{theta0}{initial values for rate parameters}

\item{beta0}{initial values for effect parameters}

\item{formula}{formula of the choice model}

\item{initTime}{initial time.}

\item{endTime}{end time.}

\item{errType2}{value of power wanted. Default 0.8}

\item{alpha}{value for lower bound computation. Default 0.9}

\item{gamma}{value for stopping rule. Default 0.9}

\item{thr}{threshold for algorithm stop}

\item{maxIter}{maximum number of iterations for Parallel Tempering}

\item{thin}{number of mutations steps between samples}

\item{pShort}{probability of shortening the sequence, Parallel Tempering}

\item{pAug}{probability of augmenting the sequence, Parallel Tempering}

\item{pPerm}{probability of permuting two elements of the sequence, Parallel Tempering}

\item{k_perm}{number of permutations after an augmentation, shortening or permutation mutation.}

\item{burnInIter1}{burn-in iterations in first iteration of the ABMCEM algorithm.}

\item{burnInIter2}{burn-in iterations after first iteration of the ABMCEM algorithm.}

\item{out_file_names}{names for saving tables with acceptance of mutations, and
loglikelihoods and score vectors. Do NOT add .txt extension.}

\item{changepPerm}{allows for adaptative permutation mutation probability.}
}
\value{
list of
\item{logLik}{log likelihood of the sequences at the last step}
\item{beta}{estimation of choice parameters}
\item{stdErrorsChoice}{estimation of standard errors, choice model}
\item{theta}{estimation of rate parameters}
\item{stdErrorsRate}{estimation of standard errors, rate model}
\item{index}{number of iterations until convergence of EM algorithm}
\item{diff}{value of stopping rule at last iteration}
}
\description{
This algorithm allows for an implementation of the ABMCEM algorithm with constant rates.
For the MCMC steps, three types of mutations are done: shortening, augmenting and permutation of the sequence.
\eqn{pShort + pAug + pPerm = 1}
}
\references{
Caffo, B. S., Jank, W., & Jones, G. L. (2005). Ascent-based Monte Carlo expectationâ€“maximization.
\emph{Journal of the Royal Statistical Society Series B: Statistical Methodology, 67(2)}, 235-251.

Stadtfeld, C., and Block, P. (2017). Interactions, Actors, and Time:
Dynamic Network Actor Models for Relational Events.
\emph{Sociological Science 4 (1)}, 318-52. \doi{10.15195/v4.a14}

Koskinen J.(2004). BAYESIAN INFERENCE FOR LONGITUDINAL SOCIAL NETWORKS.
\emph{Research Report, number 2004: 4.}.

Ruth, W. (2024). A review of Monte Carlo-based versions of the EM algorithm.
\emph{arXiv preprint} arXiv:2401.00945.

Snijders, T. A., Koskinen, J., & Schweinberger, M. (2010).
Maximum likelihood estimation for social network dynamics.
\emph{The annals of applied statistics, 4(2)}, 567.
}
